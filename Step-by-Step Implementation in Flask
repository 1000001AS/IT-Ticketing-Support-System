1. Create an AuditLog Table

class AuditLog(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    actor_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    action = db.Column(db.String(255))
    timestamp = db.Column(db.DateTime, default=datetime.utcnow)
    role = db.Column(db.String(50))  # captured from actor
    ip_address = db.Column(db.String(45))  # optional: user's IP

2. Write a Logging Function

from flask import request
from models import AuditLog
from flask_login import current_user

def log_action(action_desc):
    audit = AuditLog(
        actor_id=current_user.id,
        action=action_desc,
        role=current_user.role,
        ip_address=request.remote_addr
    )
    db.session.add(audit)
    db.session.commit()

3. Call log_action() in Key Routes

log_action(f"User submitted ticket titled: {title}")
log_action(f"Technician changed status to 'Closed' for ticket #{ticket_id}")

4. Admin-Only Log Viewer

@app.route('/audit-log')
@role_required('admin')  # Custom decorator or conditional
def view_audit_log():
    logs = AuditLog.query.order_by(AuditLog.timestamp.desc()).limit(100)
    return render_template('audit_log.html', logs=logs)

